function cov_1x0eg9xl0e(){var path="/Users/derekblauser/Desktop/Thinkful/qualified-challenges/Project_Decoder_Ring_1/src/polybius.js";var hash="9c3e9965301076df3945090bba84dd065ea3c1c5";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/derekblauser/Desktop/Thinkful/qualified-challenges/Project_Decoder_Ring_1/src/polybius.js",statementMap:{"0":{start:{line:1,column:23},end:{line:110,column:4}},"1":{start:{line:3,column:23},end:{line:29,column:3}},"2":{start:{line:31,column:24},end:{line:57,column:3}},"3":{start:{line:61,column:21},end:{line:61,column:23}},"4":{start:{line:62,column:4},end:{line:77,column:5}},"5":{start:{line:63,column:22},end:{line:63,column:40}},"6":{start:{line:64,column:6},end:{line:76,column:7}},"7":{start:{line:65,column:24},end:{line:65,column:51}},"8":{start:{line:66,column:18},end:{line:66,column:37}},"9":{start:{line:67,column:18},end:{line:67,column:47}},"10":{start:{line:68,column:8},end:{line:68,column:33}},"11":{start:{line:69,column:13},end:{line:76,column:7}},"12":{start:{line:70,column:24},end:{line:70,column:55}},"13":{start:{line:71,column:18},end:{line:71,column:37}},"14":{start:{line:72,column:18},end:{line:72,column:47}},"15":{start:{line:73,column:8},end:{line:73,column:33}},"16":{start:{line:75,column:8},end:{line:75,column:32}},"17":{start:{line:78,column:4},end:{line:78,column:22}},"18":{start:{line:84,column:4},end:{line:84,column:64}},"19":{start:{line:84,column:51},end:{line:84,column:64}},"20":{start:{line:85,column:21},end:{line:85,column:23}},"21":{start:{line:86,column:4},end:{line:96,column:5}},"22":{start:{line:86,column:17},end:{line:86,column:18}},"23":{start:{line:87,column:6},end:{line:95,column:7}},"24":{start:{line:88,column:8},end:{line:88,column:31}},"25":{start:{line:89,column:8},end:{line:89,column:18}},"26":{start:{line:91,column:18},end:{line:91,column:26}},"27":{start:{line:92,column:18},end:{line:92,column:30}},"28":{start:{line:93,column:26},end:{line:93,column:36}},"29":{start:{line:94,column:8},end:{line:94,column:47}},"30":{start:{line:97,column:4},end:{line:97,column:22}},"31":{start:{line:101,column:4},end:{line:105,column:5}},"32":{start:{line:102,column:6},end:{line:102,column:29}},"33":{start:{line:104,column:6},end:{line:104,column:29}},"34":{start:{line:107,column:2},end:{line:109,column:4}},"35":{start:{line:112,column:0},end:{line:112,column:55}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:1,column:24},end:{line:1,column:25}},loc:{start:{line:1,column:36},end:{line:110,column:1}},line:1},"1":{name:"_encoder",decl:{start:{line:60,column:11},end:{line:60,column:19}},loc:{start:{line:60,column:27},end:{line:79,column:3}},line:60},"2":{name:"_decoder",decl:{start:{line:82,column:11},end:{line:82,column:19}},loc:{start:{line:82,column:27},end:{line:98,column:3}},line:82},"3":{name:"polybius",decl:{start:{line:100,column:11},end:{line:100,column:19}},loc:{start:{line:100,column:42},end:{line:106,column:3}},line:100}},branchMap:{"0":{loc:{start:{line:64,column:6},end:{line:76,column:7}},type:"if",locations:[{start:{line:64,column:6},end:{line:76,column:7}},{start:{line:64,column:6},end:{line:76,column:7}}],line:64},"1":{loc:{start:{line:64,column:10},end:{line:64,column:48}},type:"binary-expr",locations:[{start:{line:64,column:10},end:{line:64,column:27}},{start:{line:64,column:31},end:{line:64,column:48}}],line:64},"2":{loc:{start:{line:69,column:13},end:{line:76,column:7}},type:"if",locations:[{start:{line:69,column:13},end:{line:76,column:7}},{start:{line:69,column:13},end:{line:76,column:7}}],line:69},"3":{loc:{start:{line:84,column:4},end:{line:84,column:64}},type:"if",locations:[{start:{line:84,column:4},end:{line:84,column:64}},{start:{line:84,column:4},end:{line:84,column:64}}],line:84},"4":{loc:{start:{line:87,column:6},end:{line:95,column:7}},type:"if",locations:[{start:{line:87,column:6},end:{line:95,column:7}},{start:{line:87,column:6},end:{line:95,column:7}}],line:87},"5":{loc:{start:{line:100,column:27},end:{line:100,column:40}},type:"default-arg",locations:[{start:{line:100,column:36},end:{line:100,column:40}}],line:100},"6":{loc:{start:{line:101,column:4},end:{line:105,column:5}},type:"if",locations:[{start:{line:101,column:4},end:{line:105,column:5}},{start:{line:101,column:4},end:{line:105,column:5}}],line:101}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0],"6":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"9c3e9965301076df3945090bba84dd065ea3c1c5"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1x0eg9xl0e=function(){return actualCoverage;};}return actualCoverage;}cov_1x0eg9xl0e();const polybiusModule=(cov_1x0eg9xl0e().s[0]++,function(){cov_1x0eg9xl0e().f[0]++;//polyAlphabet array will be used when encoding letters to numbers
const polyAlphabet=(cov_1x0eg9xl0e().s[1]++,["a","b","c","d","e","f","g","h","i/j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]);// polyAlphabet2 will be used when decoding numbers to letters
const polyAlphabet2=(cov_1x0eg9xl0e().s[2]++,{11:"a",21:"b",31:"c",41:"d",51:"e",12:"f",22:"g",32:"h",42:"(i/j)",52:"k",13:"l",23:"m",33:"n",43:"o",53:"p",14:"q",24:"r",34:"s",44:"t",54:"u",15:"v",25:"w",35:"x",45:"y",55:"z"});//helper function used to encode messages from letters to numbers
function _encoder(input){cov_1x0eg9xl0e().f[1]++;let endMessage=(cov_1x0eg9xl0e().s[3]++,"");cov_1x0eg9xl0e().s[4]++;for(let char of input){let lowerChar=(cov_1x0eg9xl0e().s[5]++,char.toLowerCase());cov_1x0eg9xl0e().s[6]++;if((cov_1x0eg9xl0e().b[1][0]++,lowerChar==="i")||(cov_1x0eg9xl0e().b[1][1]++,lowerChar==="j")){cov_1x0eg9xl0e().b[0][0]++;let letterPos=(cov_1x0eg9xl0e().s[7]++,polyAlphabet.indexOf("i/j"));const x=(cov_1x0eg9xl0e().s[8]++,letterPos%5+1);const y=(cov_1x0eg9xl0e().s[9]++,Math.floor(letterPos/5)+1);cov_1x0eg9xl0e().s[10]++;endMessage+=`${x}${y}`;}else{cov_1x0eg9xl0e().b[0][1]++;cov_1x0eg9xl0e().s[11]++;if(polyAlphabet.includes(lowerChar)){cov_1x0eg9xl0e().b[2][0]++;let letterPos=(cov_1x0eg9xl0e().s[12]++,polyAlphabet.indexOf(lowerChar));const x=(cov_1x0eg9xl0e().s[13]++,letterPos%5+1);const y=(cov_1x0eg9xl0e().s[14]++,Math.floor(letterPos/5)+1);cov_1x0eg9xl0e().s[15]++;endMessage+=`${x}${y}`;}else{cov_1x0eg9xl0e().b[2][1]++;cov_1x0eg9xl0e().s[16]++;endMessage+=lowerChar;}}}cov_1x0eg9xl0e().s[17]++;return endMessage;}//helper function used to decode numbers to letters
function _decoder(input){cov_1x0eg9xl0e().f[2]++;cov_1x0eg9xl0e().s[18]++;//checking to see if the length of all numbers (excluding spaces) is even)
if(input.replace(/\s/g,"").length%2!==0){cov_1x0eg9xl0e().b[3][0]++;cov_1x0eg9xl0e().s[19]++;return false;}else{cov_1x0eg9xl0e().b[3][1]++;}let endMessage=(cov_1x0eg9xl0e().s[20]++,"");cov_1x0eg9xl0e().s[21]++;for(let i=(cov_1x0eg9xl0e().s[22]++,0);i<input.length;i+=2){cov_1x0eg9xl0e().s[23]++;if(input[i]===" "){cov_1x0eg9xl0e().b[4][0]++;cov_1x0eg9xl0e().s[24]++;endMessage+=input[i];cov_1x0eg9xl0e().s[25]++;i=i-1;}else{cov_1x0eg9xl0e().b[4][1]++;const x=(cov_1x0eg9xl0e().s[26]++,input[i]);const y=(cov_1x0eg9xl0e().s[27]++,input[i+1]);const letterPos=(cov_1x0eg9xl0e().s[28]++,`${x}${y}`);cov_1x0eg9xl0e().s[29]++;endMessage+=polyAlphabet2[letterPos];}}cov_1x0eg9xl0e().s[30]++;return endMessage;}function polybius(input,encode=(cov_1x0eg9xl0e().b[5][0]++,true)){cov_1x0eg9xl0e().f[3]++;cov_1x0eg9xl0e().s[31]++;if(!encode){cov_1x0eg9xl0e().b[6][0]++;cov_1x0eg9xl0e().s[32]++;return _decoder(input);}else{cov_1x0eg9xl0e().b[6][1]++;cov_1x0eg9xl0e().s[33]++;return _encoder(input);}}cov_1x0eg9xl0e().s[34]++;return{polybius};}());cov_1x0eg9xl0e().s[35]++;module.exports={polybius:polybiusModule.polybius};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvbHliaXVzLmpzIl0sIm5hbWVzIjpbInBvbHliaXVzTW9kdWxlIiwicG9seUFscGhhYmV0IiwicG9seUFscGhhYmV0MiIsIl9lbmNvZGVyIiwiaW5wdXQiLCJlbmRNZXNzYWdlIiwiY2hhciIsImxvd2VyQ2hhciIsInRvTG93ZXJDYXNlIiwibGV0dGVyUG9zIiwiaW5kZXhPZiIsIngiLCJ5IiwiTWF0aCIsImZsb29yIiwiaW5jbHVkZXMiLCJfZGVjb2RlciIsInJlcGxhY2UiLCJsZW5ndGgiLCJpIiwicG9seWJpdXMiLCJlbmNvZGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiNDBKQWVZOzJGQWZaLEtBQU1BLENBQUFBLGNBQWMsMEJBQUksVUFBWSx5QkFDbEM7QUFDQSxLQUFNQyxDQUFBQSxZQUFZLDBCQUFHLENBQ25CLEdBRG1CLENBRW5CLEdBRm1CLENBR25CLEdBSG1CLENBSW5CLEdBSm1CLENBS25CLEdBTG1CLENBTW5CLEdBTm1CLENBT25CLEdBUG1CLENBUW5CLEdBUm1CLENBU25CLEtBVG1CLENBVW5CLEdBVm1CLENBV25CLEdBWG1CLENBWW5CLEdBWm1CLENBYW5CLEdBYm1CLENBY25CLEdBZG1CLENBZW5CLEdBZm1CLENBZ0JuQixHQWhCbUIsQ0FpQm5CLEdBakJtQixDQWtCbkIsR0FsQm1CLENBbUJuQixHQW5CbUIsQ0FvQm5CLEdBcEJtQixDQXFCbkIsR0FyQm1CLENBc0JuQixHQXRCbUIsQ0F1Qm5CLEdBdkJtQixDQXdCbkIsR0F4Qm1CLENBeUJuQixHQXpCbUIsQ0FBSCxDQUFsQixDQTJCQTtBQUNBLEtBQU1DLENBQUFBLGFBQWEsMEJBQUcsQ0FDcEIsR0FBSSxHQURnQixDQUVwQixHQUFJLEdBRmdCLENBR3BCLEdBQUksR0FIZ0IsQ0FJcEIsR0FBSSxHQUpnQixDQUtwQixHQUFJLEdBTGdCLENBTXBCLEdBQUksR0FOZ0IsQ0FPcEIsR0FBSSxHQVBnQixDQVFwQixHQUFJLEdBUmdCLENBU3BCLEdBQUksT0FUZ0IsQ0FV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QUFDLDJCQUFHUixLQUFLLENBQUNlLENBQUMsQ0FBRyxDQUFMLENBQVIsQ0FBUCxDQUNBLEtBQU1WLENBQUFBLFNBQVMsMkJBQUksR0FBRUUsQ0FBRSxHQUFFQyxDQUFFLEVBQVosQ0FBZixDQUhLLHlCQUlMUCxVQUFVLEVBQUlILGFBQWEsQ0FBQ08sU0FBRCxDQUEzQixDQUNELENBQ0YsQ0Fkc0IseUJBZXZCLE1BQU9KLENBQUFBLFVBQVAsQ0FDRCxDQUVELFFBQVNlLENBQUFBLFFBQVQsQ0FBa0JoQixLQUFsQixDQUF5QmlCLE1BQU0sNkJBQUcsSUFBSCxDQUEvQixDQUF3QyxrREFDdEMsR0FBSSxDQUFDQSxNQUFMLENBQWEscURBQ1gsTUFBT0wsQ0FBQUEsUUFBUSxDQUFDWixLQUFELENBQWYsQ0FDRCxDQUZELElBRU8scURBQ0wsTUFBT0QsQ0FBQUEsUUFBUSxDQUFDQyxLQUFELENBQWYsQ0FDRCxDQUNGLENBekdpQyx5QkEwR2xDLE1BQU8sQ0FDTGdCLFFBREssQ0FBUCxDQUdELENBN0dzQixFQUFILENBQXBCLEMseUJBK0dBRSxNQUFNLENBQUNDLE9BQVAsQ0FBaUIsQ0FBRUgsUUFBUSxDQUFFcEIsY0FBYyxDQUFDb0IsUUFBM0IsQ0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwb2x5Yml1c01vZHVsZSA9IChmdW5jdGlvbiAoKSB7XG4gIC8vcG9seUFscGhhYmV0IGFycmF5IHdpbGwgYmUgdXNlZCB3aGVuIGVuY29kaW5nIGxldHRlcnMgdG8gbnVtYmVyc1xuICBjb25zdCBwb2x5QWxwaGFiZXQgPSBbXG4gICAgXCJhXCIsXG4gICAgXCJiXCIsXG4gICAgXCJjXCIsXG4gICAgXCJkXCIsXG4gICAgXCJlXCIsXG4gICAgXCJmXCIsXG4gICAgXCJnXCIsXG4gICAgXCJoXCIsXG4gICAgXCJpL2pcIixcbiAgICBcImtcIixcbiAgICBcImxcIixcbiAgICBcIm1cIixcbiAgICBcIm5cIixcbiAgICBcIm9cIixcbiAgICBcInBcIixcbiAgICBcInFcIixcbiAgICBcInJcIixcbiAgICBcInNcIixcbiAgICBcInRcIixcbiAgICBcInVcIixcbiAgICBcInZcIixcbiAgICBcIndcIixcbiAgICBcInhcIixcbiAgICBcInlcIixcbiAgICBcInpcIixcbiAgXTtcbiAgLy8gcG9seUFscGhhYmV0MiB3aWxsIGJlIHVzZWQgd2hlbiBkZWNvZGluZyBudW1iZXJzIHRvIGxldHRlcnNcbiAgY29uc3QgcG9seUFscGhhYmV0MiA9IHtcbiAgICAxMTogXCJhXCIsXG4gICAgMjE6IFwiYlwiLFxuICAgIDMxOiBcImNcIixcbiAgICA0MTogXCJkXCIsXG4gICAgNTE6IFwiZVwiLFxuICAgIDEyOiBcImZcIixcbiAgICAyMjogXCJnXCIsXG4gICAgMzI6IFwiaFwiLFxuICAgIDQyOiBcIihpL2opXCIsXG4gICAgNTI6IFwia1wiLFxuICAgIDEzOiBcImxcIixcbiAgICAyMzogXCJtXCIsXG4gICAgMzM6IFwiblwiLFxuICAgIDQzOiBcIm9cIixcbiAgICA1MzogXCJwXCIsXG4gICAgMTQ6IFwicVwiLFxuICAgIDI0OiBcInJcIixcbiAgICAzNDogXCJzXCIsXG4gICAgNDQ6IFwidFwiLFxuICAgIDU0OiBcInVcIixcbiAgICAxNTogXCJ2XCIsXG4gICAgMjU6IFwid1wiLFxuICAgIDM1OiBcInhcIixcbiAgICA0NTogXCJ5XCIsXG4gICAgNTU6IFwielwiLFxuICB9O1xuICBcbiAgLy9oZWxwZXIgZnVuY3Rpb24gdXNlZCB0byBlbmNvZGUgbWVzc2FnZXMgZnJvbSBsZXR0ZXJzIHRvIG51bWJlcnNcbiAgZnVuY3Rpb24gX2VuY29kZXIoaW5wdXQpIHtcbiAgICBsZXQgZW5kTWVzc2FnZSA9IFwiXCI7XG4gICAgZm9yIChsZXQgY2hhciBvZiBpbnB1dCkge1xuICAgICAgbGV0IGxvd2VyQ2hhciA9IGNoYXIudG9Mb3dlckNhc2UoKTtcbiAgICAgIGlmIChsb3dlckNoYXIgPT09IFwiaVwiIHx8IGxvd2VyQ2hhciA9PT0gXCJqXCIpIHtcbiAgICAgICAgbGV0IGxldHRlclBvcyA9IHBvbHlBbHBoYWJldC5pbmRleE9mKFwiaS9qXCIpO1xuICAgICAgICBjb25zdCB4ID0gKGxldHRlclBvcyAlIDUpICsgMTtcbiAgICAgICAgY29uc3QgeSA9IE1hdGguZmxvb3IobGV0dGVyUG9zIC8gNSkgKyAxO1xuICAgICAgICBlbmRNZXNzYWdlICs9IGAke3h9JHt5fWA7XG4gICAgICB9IGVsc2UgaWYgKHBvbHlBbHBoYWJldC5pbmNsdWRlcyhsb3dlckNoYXIpKSB7XG4gICAgICAgIGxldCBsZXR0ZXJQb3MgPSBwb2x5QWxwaGFiZXQuaW5kZXhPZihsb3dlckNoYXIpO1xuICAgICAgICBjb25zdCB4ID0gKGxldHRlclBvcyAlIDUpICsgMTtcbiAgICAgICAgY29uc3QgeSA9IE1hdGguZmxvb3IobGV0dGVyUG9zIC8gNSkgKyAxO1xuICAgICAgICBlbmRNZXNzYWdlICs9IGAke3h9JHt5fWA7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBlbmRNZXNzYWdlICs9IGxvd2VyQ2hhcjtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGVuZE1lc3NhZ2U7XG4gIH1cblxuICAvL2hlbHBlciBmdW5jdGlvbiB1c2VkIHRvIGRlY29kZSBudW1iZXJzIHRvIGxldHRlcnNcbiAgZnVuY3Rpb24gX2RlY29kZXIoaW5wdXQpIHtcbiAgICAvL2NoZWNraW5nIHRvIHNlZSBpZiB0aGUgbGVuZ3RoIG9mIGFsbCBudW1iZXJzIChleGNsdWRpbmcgc3BhY2VzKSBpcyBldmVuKVxuICAgIGlmIChpbnB1dC5yZXBsYWNlKC9cXHMvZywgXCJcIikubGVuZ3RoICUgMiAhPT0gMCkgcmV0dXJuIGZhbHNlO1xuICAgIGxldCBlbmRNZXNzYWdlID0gXCJcIjtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0Lmxlbmd0aDsgaSArPSAyKSB7XG4gICAgICBpZiAoaW5wdXRbaV0gPT09IFwiIFwiKSB7XG4gICAgICAgIGVuZE1lc3NhZ2UgKz0gaW5wdXRbaV07XG4gICAgICAgIGkgPSBpIC0gMTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IHggPSBpbnB1dFtpXTtcbiAgICAgICAgY29uc3QgeSA9IGlucHV0W2kgKyAxXTtcbiAgICAgICAgY29uc3QgbGV0dGVyUG9zID0gYCR7eH0ke3l9YDtcbiAgICAgICAgZW5kTWVzc2FnZSArPSBwb2x5QWxwaGFiZXQyW2xldHRlclBvc107XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBlbmRNZXNzYWdlO1xuICB9XG5cbiAgZnVuY3Rpb24gcG9seWJpdXMoaW5wdXQsIGVuY29kZSA9IHRydWUpIHtcbiAgICBpZiAoIWVuY29kZSkge1xuICAgICAgcmV0dXJuIF9kZWNvZGVyKGlucHV0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIF9lbmNvZGVyKGlucHV0KTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBwb2x5Yml1cyxcbiAgfTtcbn0pKCk7XG5cbm1vZHVsZS5leHBvcnRzID0geyBwb2x5Yml1czogcG9seWJpdXNNb2R1bGUucG9seWJpdXMgfTtcbiJdfQ==