function cov_1x0eg9xl0e(){var path="/Users/derekblauser/Desktop/Thinkful/qualified-challenges/Project_Decoder_Ring_1/src/polybius.js";var hash="20b16ad1d93c4d924e1961f5a8c2665184ac3e37";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/derekblauser/Desktop/Thinkful/qualified-challenges/Project_Decoder_Ring_1/src/polybius.js",statementMap:{"0":{start:{line:1,column:23},end:{line:103,column:4}},"1":{start:{line:3,column:23},end:{line:29,column:3}},"2":{start:{line:31,column:24},end:{line:57,column:3}},"3":{start:{line:60,column:24},end:{line:60,column:26}},"4":{start:{line:61,column:4},end:{line:70,column:5}},"5":{start:{line:62,column:22},end:{line:62,column:40}},"6":{start:{line:63,column:6},end:{line:69,column:7}},"7":{start:{line:64,column:8},end:{line:64,column:33}},"8":{start:{line:65,column:13},end:{line:69,column:7}},"9":{start:{line:66,column:8},end:{line:66,column:38}},"10":{start:{line:68,column:8},end:{line:68,column:38}},"11":{start:{line:71,column:4},end:{line:71,column:34}},"12":{start:{line:77,column:4},end:{line:77,column:64}},"13":{start:{line:77,column:51},end:{line:77,column:64}},"14":{start:{line:78,column:21},end:{line:78,column:23}},"15":{start:{line:79,column:4},end:{line:89,column:5}},"16":{start:{line:79,column:17},end:{line:79,column:18}},"17":{start:{line:80,column:6},end:{line:88,column:7}},"18":{start:{line:81,column:8},end:{line:81,column:31}},"19":{start:{line:82,column:8},end:{line:82,column:12}},"20":{start:{line:84,column:18},end:{line:84,column:26}},"21":{start:{line:85,column:18},end:{line:85,column:30}},"22":{start:{line:86,column:26},end:{line:86,column:36}},"23":{start:{line:87,column:8},end:{line:87,column:47}},"24":{start:{line:90,column:4},end:{line:90,column:22}},"25":{start:{line:94,column:4},end:{line:98,column:5}},"26":{start:{line:95,column:6},end:{line:95,column:29}},"27":{start:{line:97,column:6},end:{line:97,column:29}},"28":{start:{line:100,column:2},end:{line:102,column:4}},"29":{start:{line:105,column:0},end:{line:105,column:55}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:1,column:24},end:{line:1,column:25}},loc:{start:{line:1,column:36},end:{line:103,column:1}},line:1},"1":{name:"_encoder",decl:{start:{line:59,column:11},end:{line:59,column:19}},loc:{start:{line:59,column:27},end:{line:72,column:3}},line:59},"2":{name:"_decoder",decl:{start:{line:75,column:11},end:{line:75,column:19}},loc:{start:{line:75,column:27},end:{line:91,column:3}},line:75},"3":{name:"polybius",decl:{start:{line:93,column:11},end:{line:93,column:19}},loc:{start:{line:93,column:42},end:{line:99,column:3}},line:93}},branchMap:{"0":{loc:{start:{line:63,column:6},end:{line:69,column:7}},type:"if",locations:[{start:{line:63,column:6},end:{line:69,column:7}},{start:{line:63,column:6},end:{line:69,column:7}}],line:63},"1":{loc:{start:{line:63,column:10},end:{line:63,column:48}},type:"binary-expr",locations:[{start:{line:63,column:10},end:{line:63,column:27}},{start:{line:63,column:31},end:{line:63,column:48}}],line:63},"2":{loc:{start:{line:65,column:13},end:{line:69,column:7}},type:"if",locations:[{start:{line:65,column:13},end:{line:69,column:7}},{start:{line:65,column:13},end:{line:69,column:7}}],line:65},"3":{loc:{start:{line:77,column:4},end:{line:77,column:64}},type:"if",locations:[{start:{line:77,column:4},end:{line:77,column:64}},{start:{line:77,column:4},end:{line:77,column:64}}],line:77},"4":{loc:{start:{line:80,column:6},end:{line:88,column:7}},type:"if",locations:[{start:{line:80,column:6},end:{line:88,column:7}},{start:{line:80,column:6},end:{line:88,column:7}}],line:80},"5":{loc:{start:{line:93,column:27},end:{line:93,column:40}},type:"default-arg",locations:[{start:{line:93,column:36},end:{line:93,column:40}}],line:93},"6":{loc:{start:{line:94,column:4},end:{line:98,column:5}},type:"if",locations:[{start:{line:94,column:4},end:{line:98,column:5}},{start:{line:94,column:4},end:{line:98,column:5}}],line:94}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0],"6":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"20b16ad1d93c4d924e1961f5a8c2665184ac3e37"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1x0eg9xl0e=function(){return actualCoverage;};}return actualCoverage;}cov_1x0eg9xl0e();const polybiusModule=(cov_1x0eg9xl0e().s[0]++,function(){cov_1x0eg9xl0e().f[0]++;// polyAlphabet2 will be used when decoding numbers to letters
const polyAlphabet=(cov_1x0eg9xl0e().s[1]++,{a:11,b:21,c:31,d:41,e:51,f:12,g:22,h:32,"(i/j)":42,k:52,l:13,m:23,n:33,o:43,p:53,q:14,r:24,s:34,t:44,u:54,v:15,w:25,x:35,y:45,z:55});const polyAlphabet2=(cov_1x0eg9xl0e().s[2]++,{11:"a",21:"b",31:"c",41:"d",51:"e",12:"f",22:"g",32:"h",42:"(i/j)",52:"k",13:"l",23:"m",33:"n",43:"o",53:"p",14:"q",24:"r",34:"s",44:"t",54:"u",15:"v",25:"w",35:"x",45:"y",55:"z"});function _encoder(input){cov_1x0eg9xl0e().f[1]++;let endMessageArr=(cov_1x0eg9xl0e().s[3]++,[]);cov_1x0eg9xl0e().s[4]++;for(let char of input){let lowerChar=(cov_1x0eg9xl0e().s[5]++,char.toLowerCase());cov_1x0eg9xl0e().s[6]++;if((cov_1x0eg9xl0e().b[1][0]++,lowerChar==="i")||(cov_1x0eg9xl0e().b[1][1]++,lowerChar==="j")){cov_1x0eg9xl0e().b[0][0]++;cov_1x0eg9xl0e().s[7]++;endMessageArr.push("42");}else{cov_1x0eg9xl0e().b[0][1]++;cov_1x0eg9xl0e().s[8]++;if(lowerChar.match(/[a-z]/i)){cov_1x0eg9xl0e().b[2][0]++;cov_1x0eg9xl0e().s[9]++;endMessageArr.push(lowerChar);}else{cov_1x0eg9xl0e().b[2][1]++;cov_1x0eg9xl0e().s[10]++;endMessageArr.push(lowerChar);}}}cov_1x0eg9xl0e().s[11]++;return endMessageArr.join("");}//helper function used to decode numbers to letters
function _decoder(input){cov_1x0eg9xl0e().f[2]++;cov_1x0eg9xl0e().s[12]++;//checking to see if the length of all numbers (excluding spaces) is even)
if(input.replace(/\s/g,"").length%2!==0){cov_1x0eg9xl0e().b[3][0]++;cov_1x0eg9xl0e().s[13]++;return false;}else{cov_1x0eg9xl0e().b[3][1]++;}let endMessage=(cov_1x0eg9xl0e().s[14]++,"");cov_1x0eg9xl0e().s[15]++;for(let i=(cov_1x0eg9xl0e().s[16]++,0);i<input.length;i+=2){cov_1x0eg9xl0e().s[17]++;if(input[i]===" "){cov_1x0eg9xl0e().b[4][0]++;cov_1x0eg9xl0e().s[18]++;endMessage+=input[i];cov_1x0eg9xl0e().s[19]++;i--;}else{cov_1x0eg9xl0e().b[4][1]++;const x=(cov_1x0eg9xl0e().s[20]++,input[i]);const y=(cov_1x0eg9xl0e().s[21]++,input[i+1]);const letterPos=(cov_1x0eg9xl0e().s[22]++,`${x}${y}`);cov_1x0eg9xl0e().s[23]++;endMessage+=polyAlphabet2[letterPos];}}cov_1x0eg9xl0e().s[24]++;return endMessage;}function polybius(input,encode=(cov_1x0eg9xl0e().b[5][0]++,true)){cov_1x0eg9xl0e().f[3]++;cov_1x0eg9xl0e().s[25]++;if(!encode){cov_1x0eg9xl0e().b[6][0]++;cov_1x0eg9xl0e().s[26]++;return _decoder(input);}else{cov_1x0eg9xl0e().b[6][1]++;cov_1x0eg9xl0e().s[27]++;return _encoder(input);}}cov_1x0eg9xl0e().s[28]++;return{polybius};}());cov_1x0eg9xl0e().s[29]++;module.exports={polybius:polybiusModule.polybius};// const polyAlphabet = [
//   ["a","11"],
//   ["b","21"],
//   ["c","31"],
//   ["d","41"],
//   ["e","51"],
//   ["f","12"],
//   ["g","22"],
//   ["h","32"],
//   ["i","42"],
//   ["j","42"],
//   ["k","52"],
//   ["l","13"],
//   ["m","23"],
//   ["n","33"],
//   ["o","43"],
//   ["p","53"],
//   ["q","14"],
//   ["r","24"],
//   ["s","34"],
//   ["t","44"],
//   ["u","54"],
//   ["v","15"],
//   ["w","25"],
//   ["x","35"],
//   ["y","45"],
//   ["z","55"],
// ];
//polyAlphabet array will be used when encoding letters to numbers
// const polyAlphabet = [
//   "a",
//   "b",
//   "c",
//   "d",
//   "e",
//   "f",
//   "g",
//   "h",
//   "i/j",
//   "k",
//   "l",
//   "m",
//   "n",
//   "o",
//   "p",
//   "q",
//   "r",
//   "s",
//   "t",
//   "u",
//   "v",
//   "w",
//   "x",
//   "y",
//   "z",
// ];
// //helper function used to encode messages from letters to numbers
// function _encoder(input) {
//   let endMessage = "";
//   for (let char of input) {
//     let lowerChar = char.toLowerCase();
//     if (lowerChar === "i" || lowerChar === "j") {
//       let letterPos = polyAlphabet.indexOf("i/j");
//       const x = (letterPos % 5) + 1;
//       const y = Math.floor(letterPos / 5) + 1;
//       endMessage += `${x}${y}`;
//     } else if (polyAlphabet.includes(lowerChar)) {
//       let letterPos = polyAlphabet.indexOf(lowerChar);
//       const x = (letterPos % 5) + 1;
//       const y = Math.floor(letterPos / 5) + 1;
//       endMessage += `${x}${y}`;
//     } else {
//       endMessage += lowerChar;
//     }
//   }
//   return endMessage;
// }
//# sourceMappingURL=data:application/json;charset=utf-8;base64,