function cov_1x0eg9xl0e(){var path="/Users/derekblauser/Desktop/Thinkful/qualified-challenges/Project_Decoder_Ring_1/src/polybius.js";var hash="af9635ae7cd25a1df4ad0fae79d9d81bba71c703";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/derekblauser/Desktop/Thinkful/qualified-challenges/Project_Decoder_Ring_1/src/polybius.js",statementMap:{"0":{start:{line:1,column:23},end:{line:78,column:4}},"1":{start:{line:3,column:24},end:{line:29,column:3}},"2":{start:{line:32,column:4},end:{line:32,column:28}},"3":{start:{line:33,column:4},end:{line:33,column:31}},"4":{start:{line:34,column:24},end:{line:34,column:26}},"5":{start:{line:35,column:4},end:{line:45,column:5}},"6":{start:{line:36,column:22},end:{line:36,column:40}},"7":{start:{line:37,column:6},end:{line:44,column:7}},"8":{start:{line:38,column:8},end:{line:38,column:27}},"9":{start:{line:39,column:13},end:{line:44,column:7}},"10":{start:{line:40,column:21},end:{line:40,column:32}},"11":{start:{line:41,column:8},end:{line:41,column:50}},"12":{start:{line:43,column:8},end:{line:43,column:35}},"13":{start:{line:46,column:4},end:{line:46,column:34}},"14":{start:{line:52,column:4},end:{line:52,column:64}},"15":{start:{line:52,column:51},end:{line:52,column:64}},"16":{start:{line:53,column:21},end:{line:53,column:23}},"17":{start:{line:54,column:4},end:{line:64,column:5}},"18":{start:{line:54,column:17},end:{line:54,column:18}},"19":{start:{line:55,column:6},end:{line:63,column:7}},"20":{start:{line:56,column:8},end:{line:56,column:31}},"21":{start:{line:57,column:8},end:{line:57,column:12}},"22":{start:{line:59,column:18},end:{line:59,column:26}},"23":{start:{line:60,column:18},end:{line:60,column:30}},"24":{start:{line:61,column:26},end:{line:61,column:36}},"25":{start:{line:62,column:8},end:{line:62,column:47}},"26":{start:{line:65,column:4},end:{line:65,column:22}},"27":{start:{line:69,column:4},end:{line:73,column:5}},"28":{start:{line:70,column:6},end:{line:70,column:29}},"29":{start:{line:72,column:6},end:{line:72,column:29}},"30":{start:{line:75,column:2},end:{line:77,column:4}},"31":{start:{line:80,column:0},end:{line:80,column:55}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:1,column:24},end:{line:1,column:25}},loc:{start:{line:1,column:36},end:{line:78,column:1}},line:1},"1":{name:"_encoder",decl:{start:{line:31,column:11},end:{line:31,column:19}},loc:{start:{line:31,column:27},end:{line:47,column:3}},line:31},"2":{name:"_decoder",decl:{start:{line:50,column:11},end:{line:50,column:19}},loc:{start:{line:50,column:27},end:{line:66,column:3}},line:50},"3":{name:"polybius",decl:{start:{line:68,column:11},end:{line:68,column:19}},loc:{start:{line:68,column:42},end:{line:74,column:3}},line:68}},branchMap:{"0":{loc:{start:{line:37,column:6},end:{line:44,column:7}},type:"if",locations:[{start:{line:37,column:6},end:{line:44,column:7}},{start:{line:37,column:6},end:{line:44,column:7}}],line:37},"1":{loc:{start:{line:37,column:10},end:{line:37,column:48}},type:"binary-expr",locations:[{start:{line:37,column:10},end:{line:37,column:27}},{start:{line:37,column:31},end:{line:37,column:48}}],line:37},"2":{loc:{start:{line:39,column:13},end:{line:44,column:7}},type:"if",locations:[{start:{line:39,column:13},end:{line:44,column:7}},{start:{line:39,column:13},end:{line:44,column:7}}],line:39},"3":{loc:{start:{line:52,column:4},end:{line:52,column:64}},type:"if",locations:[{start:{line:52,column:4},end:{line:52,column:64}},{start:{line:52,column:4},end:{line:52,column:64}}],line:52},"4":{loc:{start:{line:55,column:6},end:{line:63,column:7}},type:"if",locations:[{start:{line:55,column:6},end:{line:63,column:7}},{start:{line:55,column:6},end:{line:63,column:7}}],line:55},"5":{loc:{start:{line:68,column:27},end:{line:68,column:40}},type:"default-arg",locations:[{start:{line:68,column:36},end:{line:68,column:40}}],line:68},"6":{loc:{start:{line:69,column:4},end:{line:73,column:5}},type:"if",locations:[{start:{line:69,column:4},end:{line:73,column:5}},{start:{line:69,column:4},end:{line:73,column:5}}],line:69}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0],"6":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"af9635ae7cd25a1df4ad0fae79d9d81bba71c703"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1x0eg9xl0e=function(){return actualCoverage;};}return actualCoverage;}cov_1x0eg9xl0e();const polybiusModule=(cov_1x0eg9xl0e().s[0]++,function(){cov_1x0eg9xl0e().f[0]++;// polyAlphabet2 will be used when decoding numbers to letters
const polyAlphabet2=(cov_1x0eg9xl0e().s[1]++,{11:"a",21:"b",31:"c",41:"d",51:"e",12:"f",22:"g",32:"h",42:"(i/j)",52:"k",13:"l",23:"m",33:"n",43:"o",53:"p",14:"q",24:"r",34:"s",44:"t",54:"u",15:"v",25:"w",35:"x",45:"y",55:"z"});function _encoder(input){cov_1x0eg9xl0e().f[1]++;cov_1x0eg9xl0e().s[2]++;_.invert(polyAlphabet2);cov_1x0eg9xl0e().s[3]++;console.log(polyAlphabet2);let endMessageArr=(cov_1x0eg9xl0e().s[4]++,[]);cov_1x0eg9xl0e().s[5]++;for(let char of input){let lowerChar=(cov_1x0eg9xl0e().s[6]++,char.toLowerCase());cov_1x0eg9xl0e().s[7]++;if((cov_1x0eg9xl0e().b[1][0]++,lowerChar==="i")||(cov_1x0eg9xl0e().b[1][1]++,lowerChar==="j")){cov_1x0eg9xl0e().b[0][0]++;cov_1x0eg9xl0e().s[8]++;endMessage+="42";}else{cov_1x0eg9xl0e().b[0][1]++;cov_1x0eg9xl0e().s[9]++;if(lowerChar.match(/[a-z]/i)){cov_1x0eg9xl0e().b[2][0]++;let letter=(cov_1x0eg9xl0e().s[10]++,input[char]);cov_1x0eg9xl0e().s[11]++;endMessageArr.push(polyAlphabet2[letter]);}else{cov_1x0eg9xl0e().b[2][1]++;cov_1x0eg9xl0e().s[12]++;endMessageArr+=lowerChar;}}}cov_1x0eg9xl0e().s[13]++;return endMessageArr.join("");}//helper function used to decode numbers to letters
function _decoder(input){cov_1x0eg9xl0e().f[2]++;cov_1x0eg9xl0e().s[14]++;//checking to see if the length of all numbers (excluding spaces) is even)
if(input.replace(/\s/g,"").length%2!==0){cov_1x0eg9xl0e().b[3][0]++;cov_1x0eg9xl0e().s[15]++;return false;}else{cov_1x0eg9xl0e().b[3][1]++;}let endMessage=(cov_1x0eg9xl0e().s[16]++,"");cov_1x0eg9xl0e().s[17]++;for(let i=(cov_1x0eg9xl0e().s[18]++,0);i<input.length;i+=2){cov_1x0eg9xl0e().s[19]++;if(input[i]===" "){cov_1x0eg9xl0e().b[4][0]++;cov_1x0eg9xl0e().s[20]++;endMessage+=input[i];cov_1x0eg9xl0e().s[21]++;i--;}else{cov_1x0eg9xl0e().b[4][1]++;const x=(cov_1x0eg9xl0e().s[22]++,input[i]);const y=(cov_1x0eg9xl0e().s[23]++,input[i+1]);const letterPos=(cov_1x0eg9xl0e().s[24]++,`${x}${y}`);cov_1x0eg9xl0e().s[25]++;endMessage+=polyAlphabet2[letterPos];}}cov_1x0eg9xl0e().s[26]++;return endMessage;}function polybius(input,encode=(cov_1x0eg9xl0e().b[5][0]++,true)){cov_1x0eg9xl0e().f[3]++;cov_1x0eg9xl0e().s[27]++;if(!encode){cov_1x0eg9xl0e().b[6][0]++;cov_1x0eg9xl0e().s[28]++;return _decoder(input);}else{cov_1x0eg9xl0e().b[6][1]++;cov_1x0eg9xl0e().s[29]++;return _encoder(input);}}cov_1x0eg9xl0e().s[30]++;return{polybius};}());cov_1x0eg9xl0e().s[31]++;module.exports={polybius:polybiusModule.polybius};// const polyAlphabet = [
//   ["a","11"],
//   ["b","21"],
//   ["c","31"],
//   ["d","41"],
//   ["e","51"],
//   ["f","12"],
//   ["g","22"],
//   ["h","32"],
//   ["i","42"],
//   ["j","42"],
//   ["k","52"],
//   ["l","13"],
//   ["m","23"],
//   ["n","33"],
//   ["o","43"],
//   ["p","53"],
//   ["q","14"],
//   ["r","24"],
//   ["s","34"],
//   ["t","44"],
//   ["u","54"],
//   ["v","15"],
//   ["w","25"],
//   ["x","35"],
//   ["y","45"],
//   ["z","55"],
// ];
//polyAlphabet array will be used when encoding letters to numbers
// const polyAlphabet = [
//   "a",
//   "b",
//   "c",
//   "d",
//   "e",
//   "f",
//   "g",
//   "h",
//   "i/j",
//   "k",
//   "l",
//   "m",
//   "n",
//   "o",
//   "p",
//   "q",
//   "r",
//   "s",
//   "t",
//   "u",
//   "v",
//   "w",
//   "x",
//   "y",
//   "z",
// ];
// //helper function used to encode messages from letters to numbers
// function _encoder(input) {
//   let endMessage = "";
//   for (let char of input) {
//     let lowerChar = char.toLowerCase();
//     if (lowerChar === "i" || lowerChar === "j") {
//       let letterPos = polyAlphabet.indexOf("i/j");
//       const x = (letterPos % 5) + 1;
//       const y = Math.floor(letterPos / 5) + 1;
//       endMessage += `${x}${y}`;
//     } else if (polyAlphabet.includes(lowerChar)) {
//       let letterPos = polyAlphabet.indexOf(lowerChar);
//       const x = (letterPos % 5) + 1;
//       const y = Math.floor(letterPos / 5) + 1;
//       endMessage += `${x}${y}`;
//     } else {
//       endMessage += lowerChar;
//     }
//   }
//   return endMessage;
// }
//# sourceMappingURL=data:application/json;charset=utf-8;base64,